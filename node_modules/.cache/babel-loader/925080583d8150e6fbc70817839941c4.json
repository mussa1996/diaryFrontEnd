{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/diaryFrontEnd/src/components/Resetpassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.scss';\nimport { Link } from 'react-router-dom';\nimport { reset } from '../actions/ResetPasswordAction';\nimport { connect } from 'react-redux';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reset = props => {\n  _s();\n\n  let [state, setState] = useState({}); // const data={\n  //     token:this.props.match.param.id,\n  //     password:this.password\n  // } \n\n  const token = localStorage.getItem('todoToken');\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    return axios.put('http://localhost:3000/api/user/resetPassword', token).then(res => {\n      localStorage.gettem('todoToken'); // dispatch({\n      //     return <Redirect to={'/login'}/>,\n      //     // type: LOGIN_SUCCESS,\n      //     payload:res.data\n      // })\n    }).catch(err => {\n      if (err.response) {// dispatch({\n        //     // type: LOGIN_ERROR,\n        //     payload:'Wrong email'\n        //      })\n      }\n    }); // props.forGet(state)\n    // if (props.login.error) {\n    //     cogoToast.error(\n    //         <div>\n    //           <b>oops!</b>\n    //             <div>{props.login.message}</div>\n    //         </div>\n    //       )\n    //     }\n  }; // if (props.login.success||token) {\n  //     props.history.push('/todoList')\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: handleChange,\n          name: \"\",\n          placeholder: \"NewPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          name: \"\",\n          value: \"ResetPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reset, \"wc4FVGFDk/CrMM/4WhalkcDyeN4=\");\n\n_c = Reset;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    forGet: Credential => dispatch(reset(Credential))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\n\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/components/Resetpassword.js"],"names":["React","useState","Link","reset","connect","cogoToast","axios","Reset","props","state","setState","token","localStorage","getItem","handleChange","e","target","id","value","handleSubmit","preventDefault","put","then","res","gettem","catch","err","response","mapDispatchToProps","dispatch","forGet","Credential","mapStateToProps","login"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,KAAR,QAAoB,gCAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAhC,CADqB,CAErB;AACA;AACA;AACA;;AAED,QAAMU,KAAK,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAb;;AACC,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBL,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACM,CAAC,CAACC,MAAF,CAASC,EAAV,GAAcF,CAAC,CAACC,MAAF,CAASE;AAFlB,KAAD,CAAR;AAIH,GALD;;AAMA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAEA,WAAOd,KAAK,CAACe,GAAN,CAAU,8CAAV,EAA0DV,KAA1D,EACNW,IADM,CACDC,GAAG,IAAI;AACTX,MAAAA,YAAY,CAACY,MAAb,CAAoB,WAApB,EADS,CAGT;AACA;AACA;AACA;AACA;AACH,KATM,EASJC,KATI,CASEC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACC,QAAR,EAAkB,CACd;AACA;AACA;AACA;AACH;AACC,KAhBC,CAAP,CAHwB,CAoBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA7BD,CAdqB,CA4CrB;AACA;AACA;;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAM,QAAA,QAAQ,EAAER,YAAhB;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAC,UAA1B;AAAqC,UAAA,QAAQ,EAAEL,YAA/C;AAA6D,UAAA,IAAI,EAAC,EAAlE;AAAqE,UAAA,WAAW,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,EAA1B;AAA6B,UAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlED;;GAAMP,K;;KAAAA,K;;AAoEN,MAAMqB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,MAAM,EAAGC,UAAD,IAAcF,QAAQ,CAAC1B,KAAK,CAAC4B,UAAD,CAAN;AAD3B,GAAP;AAGH,CAJD;;AAKA,MAAMC,eAAe,GAAIvB,KAAD,IAAW;AAC/B,SAAO;AACHwB,IAAAA,KAAK,EAACxB,KAAK,CAACwB;AADT,GAAP;AAGH,CAJD;;AAKA,eAAe1B,KAAf","sourcesContent":["import React,{useState} from 'react';\nimport '../App.scss';\nimport {Link} from 'react-router-dom'\nimport {reset} from '../actions/ResetPasswordAction'\nimport { connect } from 'react-redux'\nimport cogoToast from 'cogo-toast';\n\nimport axios from 'axios';\n\nconst Reset = (props) => {\n    let [state, setState] = useState({})\n    // const data={\n    //     token:this.props.match.param.id,\n    //     password:this.password\n    // } \n    \n   const token =localStorage.getItem('todoToken')\n    const handleChange = (e) => {\n        setState({\n            ...state,\n            [e.target.id]:e.target.value\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n       \n        return axios.put('http://localhost:3000/api/user/resetPassword', token)\n        .then(res => {\n            localStorage.gettem('todoToken');\n            \n            // dispatch({\n            //     return <Redirect to={'/login'}/>,\n            //     // type: LOGIN_SUCCESS,\n            //     payload:res.data\n            // })\n        }).catch(err => {\n            if (err.response) {\n                // dispatch({\n                //     // type: LOGIN_ERROR,\n                //     payload:'Wrong email'\n                //      })\n            }\n             })\n        // props.forGet(state)\n        // if (props.login.error) {\n        //     cogoToast.error(\n        //         <div>\n        //           <b>oops!</b>\n        //             <div>{props.login.message}</div>\n        //         </div>\n        //       )\n        //     }\n    }\n    // if (props.login.success||token) {\n    //     props.history.push('/todoList')\n    // }\n    \n\n    return (\n        <div className=\"login-container\">\n            \n            <div className=\"box\">\n            <h3>Reset Password</h3>\n                <form onSubmit={handleSubmit}>\n                <input type=\"password\" id=\"password\" onChange={handleChange} name=\"\" placeholder=\"NewPassword\" />\n                \n                <input type=\"submit\" name=\"\" value=\"ResetPassword\" />\n               \n               </form>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        forGet: (Credential)=>dispatch(reset(Credential))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        login:state.login\n    }\n}\nexport default Reset;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}