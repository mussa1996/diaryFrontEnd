{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport Modal from \"../modals/Modal\";\nimport { connect } from \"react-redux\";\nimport { addTodo, deleteTodo, updateTodo } from \"../actions/todosActions\"; // import { searchTodo, searchTodo ,getTodos} from \"../actions/getTodosAction\";\n\nimport \"../App.scss\";\nimport cogoToast from \"cogo-toast\";\nimport { logout } from \"../actions/LoginAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet searchKeyword; // import {getTodos,searchTodo} from '../actions/getTodosAction'\n\nconst TodoList = props => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"false\");\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    props.getTodos();\n  }, [searchTerm]);\n  useEffect(() => {\n    props.searchTodo(searchKeyword);\n  }, [searchKeyword]);\n\n  if (props.delete.success) {\n    cogoToast.success( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Awesome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"todo deleted successfully?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    div: true,\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolist-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"ADD TODO\",\n            onClick: () => setIsOpen(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"LOGOUT\",\n            onClick: () => {\n              localStorage.removeItem(\"todoToken\");\n              window.location.reload();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"searchKeyword\",\n            value: searchKeyword,\n            type: \"text\",\n            placeholder: \"search ...\",\n            onChange: event => {\n              setSearchTerm(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), props.myTodos.diary.filter(val => {\n            if (searchTerm == \"\") {\n              return val;\n            } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n              return val;\n            }\n          }).map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: val.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-section\",\n      children: props.myTodos.pending ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"diary loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : props.myTodos.error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : props.myTodos.diary[0] != null ? props.myTodos.diary.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          diary: todo,\n          updateState: props.update,\n          deleteTodo: props.deleteTodo,\n          updateTodo: props.updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"create your first todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isOpen,\n      onClose: () => setIsOpen(false),\n      todo: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"wv8YN19hxeaXtG3aW/nIj8URCmk=\");\n\n_c = TodoList;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addtodo: datas => dispatch(addTodo(datas)),\n    getTodos: () => dispatch(getTodos()),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\n    logout: () => dispatch(logout())\n  };\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  myTodos: state.myTodos,\n  delete: state.delete,\n  update: state.update,\n  login: state.login\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js"],"names":["React","useState","useEffect","Card","Modal","connect","addTodo","deleteTodo","updateTodo","cogoToast","logout","searchKeyword","TodoList","props","searchTerm","setSearchTerm","isOpen","setIsOpen","getTodos","searchTodo","delete","success","window","location","reload","localStorage","removeItem","event","target","value","myTodos","diary","filter","val","title","toLowerCase","includes","map","key","pending","error","todo","update","mapDispatchToProps","dispatch","addtodo","datas","id","credentials","mapStateToProps","state","todos","login"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport Modal from \"../modals/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo, deleteTodo, updateTodo } from \"../actions/todosActions\";\r\n// import { searchTodo, searchTodo ,getTodos} from \"../actions/getTodosAction\";\r\nimport \"../App.scss\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { logout } from \"../actions/LoginAction\";\r\nlet searchKeyword;\r\n// import {getTodos,searchTodo} from '../actions/getTodosAction'\r\n\r\nconst TodoList = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"false\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(() => {\r\n    props.getTodos();\r\n  }, [searchTerm]);\r\n  useEffect(() => {\r\n    props.searchTodo(searchKeyword);\r\n  }, [searchKeyword]);\r\n\r\n  if (props.delete.success) {\r\n    cogoToast.success(\r\n      <div>\r\n        <b>Awesome!</b>\r\n        <div>todo deleted successfully?</div>\r\n      </div>\r\n    );\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    <div div className=\"todo-container\">\r\n      <div className=\"todos-header\">\r\n        <h1>Todos</h1>\r\n        <div className=\"todolist-btn\">\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"ADD TODO\"\r\n              onClick={() => setIsOpen(true)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"LOGOUT\"\r\n              onClick={() => {\r\n                localStorage.removeItem(\"todoToken\");\r\n                window.location.reload();\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"searchKeyword\"\r\n              value={searchKeyword}\r\n              type=\"text\"\r\n              placeholder=\"search ...\"\r\n              onChange={(event) => {\r\n                setSearchTerm(event.target.value);\r\n              }}\r\n            ></input>\r\n            {props.myTodos.diary\r\n              .filter((val) => {\r\n                if (searchTerm == \"\") {\r\n                  return val;\r\n                } else if (\r\n                  val.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return val;\r\n                }\r\n              })\r\n              .map((val, key) => {\r\n                return (\r\n                  <div>\r\n                    <p>{val.title}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"todos-section\">\r\n        {props.myTodos.pending ? (\r\n          <h2>diary loading...</h2>\r\n        ) : props.myTodos.error ? (\r\n          <h3>Error</h3>\r\n        ) : props.myTodos.diary[0] != null ? (\r\n          props.myTodos.diary.map((todo) => {\r\n            return (\r\n              <Card\r\n                diary={todo}\r\n                updateState={props.update}\r\n                deleteTodo={props.deleteTodo}\r\n                updateTodo={props.updateTodo}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <h3>create your first todo</h3>\r\n        )}\r\n      </div>\r\n      <Modal open={isOpen} onClose={() => setIsOpen(false)} todo={props} />\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addtodo: (datas) => dispatch(addTodo(datas)),\r\n    getTodos: () => dispatch(getTodos()),\r\n    deleteTodo: (id) => dispatch(deleteTodo(id)),\r\n    updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n  myTodos: state.myTodos,\r\n  delete: state.delete,\r\n  update: state.update,\r\n  login: state.login,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n"]},"metadata":{},"sourceType":"module"}