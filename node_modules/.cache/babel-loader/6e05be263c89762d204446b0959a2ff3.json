{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/diaryFrontEnd/src/components/Forgetpassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.scss';\nimport { Link } from 'react-router-dom';\nimport { signin } from '../actions/ForgetPassAction';\nimport { connect } from 'react-redux';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forget = props => {\n  _s();\n\n  let [state, setState] = useState({});\n  const token = localStorage.getItem('todoToken');\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.signIn(state); //  const forgetpass = (credentials) => dispatch => {\n    //     dispatch({\n    //         // type:FORGET_REQUEST\n    //     })\n\n    axios.post('http://localhost:3000/api/user/forgetpassword', state).then(res => {\n      localStorage.setItem('todoToken', res.data.token); // dispatch({\n      //     // type: FORGET_SUCCESS,\n      //     payload:res.data\n      // })\n    }).catch(err => {\n      if (err.response) {\n        dispatch({\n          // type: FORGET_ERROR,\n          payload: 'Wrong email'\n        });\n      }\n    });\n  }; // if (props.login.error) {\n  //     cogoToast.error(\n  //         <div>\n  //           <b>oops!</b>\n  //             <div>{props.login.message}</div>\n  //         </div>\n  //       )\n  //     }\n  // if (props.login.success||token) {\n  //     props.history.push('/todoList')\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Forget Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"\",\n          onChange: handleChange,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          name: \"\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forget, \"wc4FVGFDk/CrMM/4WhalkcDyeN4=\");\n\n_c = Forget;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: Credential => dispatch(signin(Credential))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forget);\n\nvar _c;\n\n$RefreshReg$(_c, \"Forget\");","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/components/Forgetpassword.js"],"names":["React","useState","Link","signin","connect","cogoToast","axios","Forget","props","state","setState","token","localStorage","getItem","handleChange","e","target","id","value","handleSubmit","preventDefault","signIn","post","then","res","setItem","data","catch","err","response","dispatch","payload","mapDispatchToProps","Credential","mapStateToProps","login"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBL,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACM,CAAC,CAACC,MAAF,CAASC,EAAV,GAAcF,CAAC,CAACC,MAAF,CAASE;AAFlB,KAAD,CAAR;AAIH,GALD;;AAMA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,KAAK,CAACa,MAAN,CAAaZ,KAAb,EAFwB,CAGxB;AACA;AACA;AACA;;AACAH,IAAAA,KAAK,CAACgB,IAAN,CAAW,+CAAX,EAA4Db,KAA5D,EACCc,IADD,CACMC,GAAG,IAAI;AACTZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,WAArB,EAAkCD,GAAG,CAACE,IAAJ,CAASf,KAA3C,EADS,CAGT;AACA;AACA;AACA;AACH,KARD,EAQGgB,KARH,CAQSC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACC,QAAR,EAAkB;AACdC,QAAAA,QAAQ,CAAC;AACL;AACAC,UAAAA,OAAO,EAAC;AAFH,SAAD,CAAR;AAIH;AACC,KAfN;AAgBK,GAvBT,CATsB,CAiClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAM,QAAA,QAAQ,EAAEZ,YAAhB;AAAA,gCACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,OAAtB;AAA8B,UAAA,IAAI,EAAC,EAAnC;AAAsC,UAAA,QAAQ,EAAEL,YAAhD;AAA8D,UAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,EAA1B;AAA6B,UAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/DD;;GAAMP,M;;KAAAA,M;;AAiEN,MAAMyB,kBAAkB,GAAIF,QAAD,IAAc;AACrC,SAAO;AACHT,IAAAA,MAAM,EAAGY,UAAD,IAAcH,QAAQ,CAAC3B,MAAM,CAAC8B,UAAD,CAAP;AAD3B,GAAP;AAGH,CAJD;;AAKA,MAAMC,eAAe,GAAIzB,KAAD,IAAW;AAC/B,SAAO;AACH0B,IAAAA,KAAK,EAAC1B,KAAK,CAAC0B;AADT,GAAP;AAGH,CAJD;;AAKA,eAAe/B,OAAO,CAAC8B,eAAD,EAAiBF,kBAAjB,CAAP,CAA6CzB,MAA7C,CAAf","sourcesContent":["import React,{useState} from 'react';\nimport '../App.scss';\nimport {Link} from 'react-router-dom'\nimport {signin} from '../actions/ForgetPassAction'\nimport { connect } from 'react-redux'\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\n\nconst Forget = (props) => {\n    let [state, setState] = useState({})\n    const token  =localStorage.getItem('todoToken')\n    const handleChange = (e) => {\n        setState({\n            ...state,\n            [e.target.id]:e.target.value\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.signIn(state)\n        //  const forgetpass = (credentials) => dispatch => {\n        //     dispatch({\n        //         // type:FORGET_REQUEST\n        //     })\n        axios.post('http://localhost:3000/api/user/forgetpassword', state)\n        .then(res => {\n            localStorage.setItem('todoToken', res.data.token);\n            \n            // dispatch({\n            //     // type: FORGET_SUCCESS,\n            //     payload:res.data\n            // })\n        }).catch(err => {\n            if (err.response) {\n                dispatch({\n                    // type: FORGET_ERROR,\n                    payload:'Wrong email'\n                     })\n            }\n             })\n            }\n        // if (props.login.error) {\n        //     cogoToast.error(\n        //         <div>\n        //           <b>oops!</b>\n        //             <div>{props.login.message}</div>\n        //         </div>\n        //       )\n        //     }\n    \n    // if (props.login.success||token) {\n    //     props.history.push('/todoList')\n    // }\n    \n\n    return (\n        <div className=\"login-container\">\n            \n            <div className=\"box\">\n            <h3>Forget Password</h3>\n                <form onSubmit={handleSubmit}>\n                <input type=\"text\" id=\"email\" name=\"\" onChange={handleChange} placeholder=\"Email\" />\n               \n                <input type=\"submit\" name=\"\" value=\"submit\" />\n               </form>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (Credential)=>dispatch(signin(Credential))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        login:state.login\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Forget);"]},"metadata":{},"sourceType":"module"}