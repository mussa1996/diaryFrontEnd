{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/diaryFrontEnd/src/components/Resetpassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.scss';\nimport { Link } from 'react-router-dom';\nimport { reset } from '../actions/ResetPasswordAction';\nimport { connect } from 'react-redux';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reset = props => {\n  _s();\n\n  let [state, setState] = useState({\n    newPassword: '',\n    resentLink: ''\n  });\n  const token = localStorage.getItem('resetToken');\n\n  const handleChange = e => {\n    setState({\n      newPassword: e.target.value,\n      resentLink: token\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.resetp(state);\n    console.log(state);\n\n    if (props.reset || token) {\n      props.history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: handleChange,\n          name: \"\",\n          placeholder: \"NewPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          name: \"\",\n          value: \"ResetPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reset, \"WvVjvNoha4CpWcbQd+yZYCjX8/c=\");\n\n_c = Reset;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetp: Credential => dispatch(reset(Credential))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset); // import '../App.scss';\n// import {Link} from 'react-router-dom'\n// // import {reset} from '../actions/ResetPasswordAction'\n// import { connect } from 'react-redux'\n// import cogoToast from 'cogo-toast';\n// import axios from 'axios';\n// const Reset = (props) => {\n//     let [state, setState] = useState({})\n//     const token  =localStorage.getItem('todoToken')\n//     const handleChange = (e) => {\n//         setState({\n//             ...state,\n//             [e.target.id]:e.target.value,\n//         })\n//     }\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         axios.put('http://localhost:3000/api/user/resetPassword', state)\n//         .then(res => {\n//             localStorage.setItem('todoToken',res.data.token);\n//             // return <Redirect to={'/login'}/>\n//             // dispatch({\n//             //     return <Redirect to={'/login'}/>,\n//             //     // type: LOGIN_SUCCESS,\n//             //     payload:res.data\n//             // })\n//         }).catch(err => {\n//             if (err.response) {\n//                 // dispatch({\n//                 //     // type: LOGIN_ERROR,\n//                 //     payload:'Wrong email'\n//                 //      })\n//             }\n//              })\n//         // props.reset(state)\n//         // if (props.login.error) {\n//         //     cogoToast.error(\n//         //         <div>\n//         //           <b>oops!</b>\n//         //             <div>{props.login.message}</div>\n//         //         </div>\n//         //       )\n//         //     }\n//     }\n//     // if (props.login.success||token) {\n//     //     props.history.push('/todoList')\n//     // }\n//     return (\n//         <div className=\"login-container\">\n//             <div className=\"box\">\n//             <h3>Reset Password</h3>\n//                 <form onSubmit={handleSubmit}>\n//                 <input type=\"password\" id=\"password\" onChange={handleChange} name=\"\" placeholder=\"NewPassword\" />\n//                 <input type=\"submit\" name=\"\" value=\"ResetPassword\" />\n//                </form>\n//             </div>\n//             <div>\n//             </div>\n//         </div>\n//     );\n// };\n// // const mapDispatchToProps = (dispatch) => {\n// //     return {\n// //         reset: (Credential)=>dispatch(reset(Credential))\n// //     }\n// // }\n// // const mapStateToProps = (state) => {\n// //     return {\n// //         login:state.login\n// //     }\n// // }\n// export default Reset\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/components/Resetpassword.js"],"names":["React","useState","Link","reset","connect","cogoToast","axios","Reset","props","state","setState","newPassword","resentLink","token","localStorage","getItem","handleChange","e","target","value","handleSubmit","preventDefault","resetp","console","log","history","push","mapDispatchToProps","dispatch","Credential","mapStateToProps","login"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport '../App.scss';\nimport {Link} from 'react-router-dom'\nimport {reset} from '../actions/ResetPasswordAction'\nimport { connect } from 'react-redux'\nimport cogoToast from 'cogo-toast';\n\nimport axios from 'axios';\n\nconst Reset = (props) => {\n    let [state, setState] = useState({newPassword:'',resentLink:''})\n    \n    const token  =localStorage.getItem('resetToken')\n    const handleChange = (e) => {\n        setState({\n           newPassword:e.target.value,\n           resentLink:token\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.resetp(state)\n        console.log(state)\n        \n        if (props.reset||token) {\n            props.history.push('/')\n        }\n       \n    }\n    \n    \n\n    return (\n        <div className=\"login-container\">\n            \n            <div className=\"box\">\n            <h3>Reset Password</h3>\n                <form onSubmit={handleSubmit}>\n                <input type=\"password\" id=\"password\" onChange={handleChange} name=\"\" placeholder=\"NewPassword\" />\n                \n                <input type=\"submit\" name=\"\" value=\"ResetPassword\" />\n               \n               </form>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        resetp: (Credential)=>dispatch(reset(Credential))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        login:state.login\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Reset);\n\n\n\n\n\n\n// import '../App.scss';\n// import {Link} from 'react-router-dom'\n// // import {reset} from '../actions/ResetPasswordAction'\n// import { connect } from 'react-redux'\n// import cogoToast from 'cogo-toast';\n\n// import axios from 'axios';\n\n// const Reset = (props) => {\n//     let [state, setState] = useState({})\n    \n//     const token  =localStorage.getItem('todoToken')\n//     const handleChange = (e) => {\n//         setState({\n//             ...state,\n//             [e.target.id]:e.target.value,\n            \n//         })\n//     }\n    \n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n       \n//         axios.put('http://localhost:3000/api/user/resetPassword', state)\n//         .then(res => {\n//             localStorage.setItem('todoToken',res.data.token);\n           \n//             // return <Redirect to={'/login'}/>\n//             // dispatch({\n//             //     return <Redirect to={'/login'}/>,\n//             //     // type: LOGIN_SUCCESS,\n//             //     payload:res.data\n//             // })\n//         }).catch(err => {\n//             if (err.response) {\n//                 // dispatch({\n//                 //     // type: LOGIN_ERROR,\n//                 //     payload:'Wrong email'\n//                 //      })\n//             }\n//              })\n\n\n\n//         // props.reset(state)\n//         // if (props.login.error) {\n//         //     cogoToast.error(\n//         //         <div>\n//         //           <b>oops!</b>\n//         //             <div>{props.login.message}</div>\n//         //         </div>\n//         //       )\n//         //     }\n//     }\n//     // if (props.login.success||token) {\n//     //     props.history.push('/todoList')\n//     // }\n    \n\n//     return (\n//         <div className=\"login-container\">\n            \n//             <div className=\"box\">\n//             <h3>Reset Password</h3>\n//                 <form onSubmit={handleSubmit}>\n//                 <input type=\"password\" id=\"password\" onChange={handleChange} name=\"\" placeholder=\"NewPassword\" />\n                \n//                 <input type=\"submit\" name=\"\" value=\"ResetPassword\" />\n               \n//                </form>\n//             </div>\n//             <div>\n\n//             </div>\n//         </div>\n//     );\n// };\n\n// // const mapDispatchToProps = (dispatch) => {\n// //     return {\n// //         reset: (Credential)=>dispatch(reset(Credential))\n// //     }\n// // }\n// // const mapStateToProps = (state) => {\n// //     return {\n// //         login:state.login\n// //     }\n// // }\n// export default Reset\n\n\n"]},"metadata":{},"sourceType":"module"}