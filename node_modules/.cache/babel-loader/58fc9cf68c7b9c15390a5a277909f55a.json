{"ast":null,"code":"// import axios from 'axios';\n// export const FORGET_REQUEST = 'FORGET_REQUEST'\n// export const FORGET_ERROR = 'FORGET_ERROR'\n// export const FORGET_SUCCESS = 'FORGET_SUCCESS'\n//  export const forgetpass = (credentials) => dispatch => {\n//     dispatch({\n//         type:FORGET_REQUEST\n//     })\n//     return axios.post('http://localhost:3000/api/user/forgetpassword', credentials)\n//         .then(res => {\n//             localStorage.setItem('todoToken', res.data.token);\n//             dispatch({\n//                 type: FORGET_SUCCESS,\n//                 payload:res.data\n//             })\n//         }).catch(err => {\n//             if (err.response) {\n//                 dispatch({\n//                     type: FORGET_ERROR,\n//                     payload:'Wrong email'\n//                      })\n//             }\n//              })\n// }\nimport axios from 'axios';\nexport const LOGIN_REQUEST = 'LOGIN_REGUEST';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\nexport const signin = credentials => dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  return axios.post('http://localhost:3000/api/user/login', credentials).then(res => {\n    localStorage.setItem('todoToken', res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    if (err.response) {\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: 'Wrong email or password'\n      });\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/actions/ForgetPassAction.js"],"names":["axios","LOGIN_REQUEST","LOGIN_ERROR","LOGIN_SUCCESS","LOGOUT","signin","credentials","dispatch","type","post","then","res","localStorage","setItem","data","token","payload","catch","err","response","logout"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEN,OAAO,MAAMC,MAAM,GAAIC,WAAD,IAAiBC,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACP;AADA,GAAD,CAAR;AAGA,SAAOD,KAAK,CAACS,IAAN,CAAW,sCAAX,EAAmDH,WAAnD,EACFI,IADE,CACGC,GAAG,IAAI;AACTC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,GAAG,CAACG,IAAJ,CAASC,KAA3C;AAEAR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,aADD;AAELa,MAAAA,OAAO,EAACL,GAAG,CAACG;AAFP,KAAD,CAAR;AAIH,GARE,EAQAG,KARA,CAQMC,GAAG,IAAI;AACZ,QAAIA,GAAG,CAACC,QAAR,EAAkB;AACdZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,WADD;AAELc,QAAAA,OAAO,EAAC;AAFH,OAAD,CAAR;AAIH;AACC,GAfH,CAAP;AAgBH,CApBO;AAsBR,OAAO,MAAMI,MAAM,GAAE,MAAKb,QAAQ,IAAI;AAClCA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAD,CAAR;AAGH,CAJM","sourcesContent":["// import axios from 'axios';\n\n// export const FORGET_REQUEST = 'FORGET_REQUEST'\n// export const FORGET_ERROR = 'FORGET_ERROR'\n// export const FORGET_SUCCESS = 'FORGET_SUCCESS'\n\n//  export const forgetpass = (credentials) => dispatch => {\n//     dispatch({\n//         type:FORGET_REQUEST\n//     })\n//     return axios.post('http://localhost:3000/api/user/forgetpassword', credentials)\n//         .then(res => {\n//             localStorage.setItem('todoToken', res.data.token);\n            \n//             dispatch({\n//                 type: FORGET_SUCCESS,\n//                 payload:res.data\n//             })\n//         }).catch(err => {\n//             if (err.response) {\n//                 dispatch({\n//                     type: FORGET_ERROR,\n//                     payload:'Wrong email'\n//                      })\n//             }\n//              })\n// }\nimport axios from 'axios';\n\nexport const LOGIN_REQUEST = 'LOGIN_REGUEST'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGOUT = 'LOGOUT'\n\n export const signin = (credentials) => dispatch => {\n    dispatch({\n        type:LOGIN_REQUEST\n    })\n    return axios.post('http://localhost:3000/api/user/login', credentials)\n        .then(res => {\n            localStorage.setItem('todoToken', res.data.token);\n            \n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload:res.data\n            })\n        }).catch(err => {\n            if (err.response) {\n                dispatch({\n                    type: LOGIN_ERROR,\n                    payload:'Wrong email or password'\n                     })\n            }\n             })\n}\n\nexport const logout =()=> dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n};"]},"metadata":{},"sourceType":"module"}