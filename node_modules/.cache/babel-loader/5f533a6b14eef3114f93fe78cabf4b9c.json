{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/frontend/src/routes/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = props => {\n  const token = localStorage.getItem('todoToken');\n  const {\n    component: Component,\n    ...rest\n  } = props;\n\n  if (token) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: matchProps => /*#__PURE__*/_jsxDEV(Component, { ...matchProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_c = ProtectedRoute;\nProtectedRoute.propTypes = {\n  component: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/mussa/Desktop/frontend/src/routes/ProtectedRoute.js"],"names":["React","Route","Redirect","PropTypes","ProtectedRoute","props","token","localStorage","getItem","component","Component","rest","matchProps","propTypes","any","isRequired","path","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,KAAV,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AACA,QAAM;AAAGC,IAAAA,SAAS,EAAEC,SAAd;AAAyB,OAAGC;AAA5B,MAAqCN,KAA3C;;AACA,MAAIC,KAAJ,EAAW;AACP,wBACI,QAAC,KAAD,OACQK,IADR;AAEI,MAAA,MAAM,EAAEC,UAAU,iBAEV,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAWO;AACH,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAEJ,CAlBD;;KAAMR,c;AAoBNA,cAAc,CAACS,SAAf,GAA2B;AACvBJ,EAAAA,SAAS,EAAEN,SAAS,CAACW,GAAV,CAAcC,UADF;AAEvBC,EAAAA,IAAI,EAAEb,SAAS,CAACc;AAFO,CAA3B;AAIA,eAAeb,cAAf","sourcesContent":["import React from 'react';\r\nimport {  Route} from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProtectedRoute = (props) => {\r\n    const token = localStorage.getItem('todoToken')\r\n    const {  component: Component, ...rest } = props;\r\n    if (token) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={matchProps => (\r\n                   \r\n                        <Component {...matchProps} />\r\n                   \r\n                )}\r\n            />\r\n        )\r\n    } else {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    \r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.any.isRequired,\r\n    path: PropTypes.string\r\n};\r\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}