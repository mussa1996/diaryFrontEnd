{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Modal from '../modals/Modal';\nimport { connect } from 'react-redux';\nimport { addTodo, deleteTodo, updateTodo } from '../actions/todosActions';\nimport getTodos from '../actions/getTodosAction';\nimport '../App.scss';\nimport cogoToast from 'cogo-toast';\nimport { logout } from '../actions/LoginAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    props.getTodos();\n  }, []);\n\n  if (props.delete.success) {\n    cogoToast.success( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Awesome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"todo deleted successfully?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this));\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    div: true,\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolist-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"ADD TODO\",\n            onClick: () => setIsOpen(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"LOGOUT\",\n            onClick: () => {\n              localStorage.removeItem('todoToken');\n              window.location.reload();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"search ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this), getTodos.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 35\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-section\",\n      children: props.myTodos.pending ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"diary loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this) : props.myTodos.error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 78\n      }, this) : props.myTodos.diary[0] != null ? props.myTodos.diary.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          diary: todo,\n          updateState: props.update,\n          deleteTodo: props.deleteTodo,\n          updateTodo: props.updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"create your first todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isOpen,\n      onClose: () => setIsOpen(false),\n      todo: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TodoList, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n\n_c = TodoList;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addtodo: datas => dispatch(addTodo(datas)),\n    getTodos: () => dispatch(getTodos()),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\n    logout: () => dispatch(logout())\n  };\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  myTodos: state.myTodos,\n  delete: state.delete,\n  update: state.update,\n  login: state.login\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js"],"names":["React","useState","useEffect","Card","Modal","connect","addTodo","deleteTodo","updateTodo","getTodos","cogoToast","logout","TodoList","props","isOpen","setIsOpen","delete","success","window","location","reload","localStorage","removeItem","map","val","key","myTodos","pending","error","diary","todo","update","mapDispatchToProps","dispatch","addtodo","datas","id","credentials","mapStateToProps","state","todos","login"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Card from './Card';\r\nimport Modal from '../modals/Modal';\r\nimport { connect } from 'react-redux'\r\nimport {addTodo, deleteTodo,updateTodo} from '../actions/todosActions'\r\nimport getTodos from '../actions/getTodosAction'\r\nimport '../App.scss'\r\nimport cogoToast from 'cogo-toast';\r\nimport { logout } from '../actions/LoginAction';\r\n    \r\nconst TodoList = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    useEffect(() => {\r\n            props.getTodos()\r\n    }, [])\r\n    \r\n    if (props.delete.success) {\r\n        cogoToast.success(\r\n            <div>\r\n              <b>Awesome!</b>\r\n              <div>todo deleted successfully?</div>\r\n            </div>\r\n        )\r\n        window.location.reload();\r\n    }\r\n        return (\r\n            <div div className=\"todo-container\">\r\n                <div className=\"todos-header\">\r\n                    <h1>Todos</h1>\r\n                    <div className=\"todolist-btn\">\r\n                        <div>\r\n                        <input type=\"submit\" value=\"ADD TODO\" onClick={()=>setIsOpen(true)}></input>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"submit\" value=\"LOGOUT\" onClick={() => {\r\n                                localStorage.removeItem('todoToken');\r\n                                window.location.reload()\r\n                            }}></input>\r\n                        </div>\r\n                       <div>\r\n                           <input type=\"text\" placeholder=\"search ...\"></input>\r\n                       {getTodos.map((val,key)=>{\r\n                           return <div></div>\r\n                       })}\r\n                       </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"todos-section\">\r\n                    {props.myTodos.pending ? (\r\n                        <h2>diary loading...</h2>) : (props.myTodos.error ? (<h3>Error</h3>) : (\r\n                         props.myTodos.diary[0]!=null?(\r\n                            props.myTodos.diary.map(todo => {\r\n                                return (\r\n                                    <Card diary={todo} updateState={props.update} deleteTodo={props.deleteTodo} updateTodo={ props.updateTodo}/>\r\n                                )\r\n                            })\r\n                         ):(<h3>create your first todo</h3>)\r\n                        ))}\r\n                </div>\r\n                <Modal open={isOpen} onClose={() => setIsOpen(false)} todo={ props}/>\r\n            </div>\r\n        );\r\n    \r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addtodo: (datas) => dispatch(addTodo(datas)),\r\n        getTodos: ()=>dispatch(getTodos()),\r\n        deleteTodo: (id) => dispatch(deleteTodo(id)),\r\n        updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\r\n        logout:()=>dispatch(logout())\r\n    }\r\n  }\r\n  const mapStateToProps = (state) =>( {\r\n      todos: state.todos,\r\n      myTodos: state.myTodos,\r\n      delete: state.delete,\r\n      update: state.update,\r\n      login:state.login\r\n  })\r\n  export default connect(mapStateToProps,mapDispatchToProps) (TodoList);"]},"metadata":{},"sourceType":"module"}