{"ast":null,"code":"import { LOGIN_ERROR, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT } from '../actions/LoginAction';\nconst initialState = {\n  success: false,\n  error: false,\n  pending: false,\n  message: '',\n  isLoggedIn: false\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        pending: true\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        success: true,\n        pending: false,\n        isLoggedIn: true\n      };\n\n    case LOGIN_ERROR:\n      return { ...state,\n        success: false,\n        pending: false,\n        error: true,\n        message: action.payload\n      };\n\n    case LOGOUT:\n      return { ...state,\n        success: false,\n        pending: false,\n        error: true,\n        isLoggedIn: false\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = LoginReducer;\nexport default LoginReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginReducer\");","map":{"version":3,"sources":["/home/mussa/Desktop/frontend/src/reducers/LoginReducer.js"],"names":["LOGIN_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT","initialState","success","error","pending","message","isLoggedIn","LoginReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAmDC,MAAnD,QAAiE,wBAAjE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,UAAU,EAAC;AALM,CAArB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEP,YAAR,EAAqBQ,MAArB,KAAgC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,OAAO,EAAC;AAFL,OAAP;;AAIJ,SAAKL,aAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHN,QAAAA,OAAO,EAAE,IAFN;AAGHE,QAAAA,OAAO,EAAE,KAHN;AAIHE,QAAAA,UAAU,EAAC;AAJR,OAAP;;AAMJ,SAAKT,WAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHN,QAAAA,OAAO,EAAE,KAFN;AAGHE,QAAAA,OAAO,EAAE,KAHN;AAIHD,QAAAA,KAAK,EAAE,IAJJ;AAKHE,QAAAA,OAAO,EAACI,MAAM,CAACE;AALZ,OAAP;;AAOJ,SAAKX,MAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHN,QAAAA,OAAO,EAAE,KAFN;AAGHE,QAAAA,OAAO,EAAE,KAHN;AAIHD,QAAAA,KAAK,EAAE,IAJJ;AAKHG,QAAAA,UAAU,EAAC;AALR,OAAP;;AAOJ;AACI,aAAOE,KAAP;AA9BR;AAgCH,CAjCD;;KAAMD,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { LOGIN_ERROR, LOGIN_REQUEST, LOGIN_SUCCESS,LOGOUT } from '../actions/LoginAction'\r\n\r\nconst initialState = {\r\n    success: false,\r\n    error: false,\r\n    pending: false,\r\n    message: '',\r\n    isLoggedIn:false\r\n}\r\n\r\n\r\nconst LoginReducer = (state= initialState,action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                pending:true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: true,\r\n                pending: false,\r\n                isLoggedIn:true\r\n            }\r\n        case LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                success: false,\r\n                pending: false,\r\n                error: true,\r\n                message:action.payload\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                success: false,\r\n                pending: false,\r\n                error: true,\r\n                isLoggedIn:false\r\n            }\r\n        default:\r\n            return state\r\n   }\r\n};\r\n\r\nexport default LoginReducer;"]},"metadata":{},"sourceType":"module"}