{"ast":null,"code":"var _jsxFileName = \"/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Modal from '../modals/Modal';\nimport { connect } from 'react-redux';\nimport { addTodo, deleteTodo, updateTodo } from '../actions/todosActions';\nimport { getTodos, searchTodo } from '../actions/getTodosAction';\nimport '../App.scss';\nimport cogoToast from 'cogo-toast';\nimport { logout } from '../actions/LoginAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [fetchingDiaries, setFetchingDiaries] = useState(false);\n  let searchKeyword;\n\n  const handleChange = e => {\n    searchKeyword = e.target.value;\n  };\n\n  const handleGetTodo = () => {\n    props.getTodos();\n    setFetchingDiaries(true);\n  };\n\n  useEffect(() => {\n    props.searchTodo(searchKeyword);\n  }, [searchKeyword]);\n\n  if (props.delete.success) {\n    cogoToast.success( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Awesome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"todo deleted successfully?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    div: true,\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolist-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"GET TODO\",\n            onClick: handleGetTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"ADD TODO\",\n            onClick: () => setIsOpen(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"LOGOUT\",\n            onClick: () => {\n              localStorage.removeItem('todoToken');\n              window.location.reload();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"searchKeyword\",\n            value: searchKeyword,\n            name: \"\",\n            onChange: handleChange,\n            placeholder: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-section\",\n      children: fetchingDiaries ? props.myTodos.pending ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"diary loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this) : props.myTodos.error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 82\n      }, this) : props.myTodos.diary[0] != null ? props.myTodos.diary.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          diary: todo,\n          updateState: props.update,\n          deleteTodo: props.deleteTodo,\n          updateTodo: props.updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"create your first todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isOpen,\n      onClose: () => setIsOpen(false),\n      todo: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TodoList, \"6+DpwyHASHPSMonfAQyVYxKQ6r4=\");\n\n_c = TodoList;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addtodo: datas => dispatch(addTodo(datas)),\n    getTodos: () => dispatch(getTodos()),\n    searchTodo: title => dispatch(searchTodo(title)),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\n    logout: () => dispatch(logout())\n  };\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  myTodos: state.myTodos,\n  delete: state.delete,\n  update: state.update,\n  login: state.login\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js"],"names":["React","useState","useEffect","Card","Modal","connect","addTodo","deleteTodo","updateTodo","getTodos","searchTodo","cogoToast","logout","TodoList","props","isOpen","setIsOpen","fetchingDiaries","setFetchingDiaries","searchKeyword","handleChange","e","target","value","handleGetTodo","delete","success","window","location","reload","localStorage","removeItem","myTodos","pending","error","diary","map","todo","update","mapDispatchToProps","dispatch","addtodo","datas","title","id","credentials","mapStateToProps","state","todos","login"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Card from './Card';\r\nimport Modal from '../modals/Modal';\r\nimport { connect } from 'react-redux'\r\nimport {addTodo, deleteTodo,updateTodo} from '../actions/todosActions'\r\nimport {getTodos,searchTodo} from '../actions/getTodosAction'\r\nimport '../App.scss'\r\nimport cogoToast from 'cogo-toast';\r\nimport { logout } from '../actions/LoginAction';\r\n    \r\nconst TodoList = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [fetchingDiaries, setFetchingDiaries]  = useState(false);\r\n    let searchKeyword;\r\n\r\n    const handleChange = (e) => {\r\n        searchKeyword = e.target.value;\r\n    }\r\n    const handleGetTodo = () => {\r\n        props.getTodos();\r\n        setFetchingDiaries(true)\r\n    }\r\n    useEffect(() => {\r\n       props.searchTodo(searchKeyword)\r\n    }, [searchKeyword])\r\n    \r\n    \r\n\r\n    if (props.delete.success) {\r\n        cogoToast.success(\r\n            <div>\r\n              <b>Awesome!</b>\r\n              <div>todo deleted successfully?</div>\r\n            </div>\r\n        )\r\n        window.location.reload();\r\n    }\r\n        return (\r\n            <div div className=\"todo-container\">\r\n                <div className=\"todos-header\">\r\n                    <h1>Todos</h1>\r\n                    <div className=\"todolist-btn\">\r\n                    <div>\r\n                        <input type=\"submit\" value=\"GET TODO\" onClick={handleGetTodo}></input>\r\n                        </div>\r\n                        <div>\r\n                        <input type=\"submit\" value=\"ADD TODO\" onClick={()=>setIsOpen(true)}></input>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"submit\" value=\"LOGOUT\" onClick={() => {\r\n                                localStorage.removeItem('todoToken');\r\n                                window.location.reload()\r\n                            }}></input>\r\n                        </div>\r\n                        <div>\r\n                                <input type=\"text\" id=\"searchKeyword\" value={searchKeyword} name=\"\" onChange={handleChange} placeholder=\"search\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"todos-section\">\r\n                    {fetchingDiaries ? (\r\n                        props.myTodos.pending ? (\r\n                            <h2>diary loading...</h2>) : (props.myTodos.error ? (<h3>Error</h3>) : (\r\n                             props.myTodos.diary[0]!=null?(\r\n                                props.myTodos.diary.map(todo => {\r\n                                    return (\r\n                                        <Card diary={todo} updateState={props.update} deleteTodo={props.deleteTodo} updateTodo={ props.updateTodo}/>\r\n                                    )\r\n                                })\r\n                             ):(<h3>create your first todo</h3>)\r\n                            ))\r\n                    ):(null)}\r\n                </div>\r\n                <Modal open={isOpen} onClose={() => setIsOpen(false)} todo={ props}/>\r\n            </div>\r\n        );\r\n    \r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addtodo: (datas) => dispatch(addTodo(datas)),\r\n        getTodos: () => dispatch(getTodos()),\r\n        searchTodo:(title)=>dispatch(searchTodo(title)),\r\n        deleteTodo: (id) => dispatch(deleteTodo(id)),\r\n        updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\r\n        logout:()=>dispatch(logout())\r\n    }\r\n  }\r\n  const mapStateToProps = (state) =>( {\r\n      todos: state.todos,\r\n      myTodos: state.myTodos,\r\n      delete: state.delete,\r\n      update: state.update,\r\n      login:state.login\r\n  })\r\n  export default connect(mapStateToProps,mapDispatchToProps) (TodoList);"]},"metadata":{},"sourceType":"module"}