{"ast":null,"code":"import axios from 'axios';\nexport const FORGET_REQUEST = 'FORGET_REQUEST';\nexport const FORGET_ERROR = 'FORGET_ERROR';\nexport const FORGET_SUCCESS = 'FORGET_SUCCESS';\nexport const forgetpass = credentials => dispatch => {\n  dispatch({\n    type: FORGET_REQUEST\n  });\n  return axios.post('http://localhost:3000/api/user/forgetpassword', credentials).then(res => {\n    localStorage.setItem('todoToken', res.data.token);\n    dispatch({\n      type: FORGET_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    if (err.response) {\n      dispatch({\n        type: FORGET_ERROR,\n        payload: 'Wrong email'\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/mussa/Desktop/diaryFrontEnd/src/actions/ForgetPassAction.js"],"names":["axios","FORGET_REQUEST","FORGET_ERROR","FORGET_SUCCESS","forgetpass","credentials","dispatch","type","post","then","res","localStorage","setItem","data","token","payload","catch","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEN,OAAO,MAAMC,UAAU,GAAIC,WAAD,IAAiBC,QAAQ,IAAI;AACpDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACN;AADA,GAAD,CAAR;AAGA,SAAOD,KAAK,CAACQ,IAAN,CAAW,+CAAX,EAA4DH,WAA5D,EACFI,IADE,CACGC,GAAG,IAAI;AACTC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,GAAG,CAACG,IAAJ,CAASC,KAA3C;AAEAR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,cADD;AAELY,MAAAA,OAAO,EAACL,GAAG,CAACG;AAFP,KAAD,CAAR;AAIH,GARE,EAQAG,KARA,CAQMC,GAAG,IAAI;AACZ,QAAIA,GAAG,CAACC,QAAR,EAAkB;AACdZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,YADD;AAELa,QAAAA,OAAO,EAAC;AAFH,OAAD,CAAR;AAIH;AACC,GAfH,CAAP;AAgBH,CApBO","sourcesContent":["import axios from 'axios';\n\nexport const FORGET_REQUEST = 'FORGET_REQUEST'\nexport const FORGET_ERROR = 'FORGET_ERROR'\nexport const FORGET_SUCCESS = 'FORGET_SUCCESS'\n\n export const forgetpass = (credentials) => dispatch => {\n    dispatch({\n        type:FORGET_REQUEST\n    })\n    return axios.post('http://localhost:3000/api/user/forgetpassword', credentials)\n        .then(res => {\n            localStorage.setItem('todoToken', res.data.token);\n            \n            dispatch({\n                type: FORGET_SUCCESS,\n                payload:res.data\n            })\n        }).catch(err => {\n            if (err.response) {\n                dispatch({\n                    type: FORGET_ERROR,\n                    payload:'Wrong email'\n                     })\n            }\n             })\n}\n"]},"metadata":{},"sourceType":"module"}