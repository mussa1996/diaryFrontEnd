{"ast":null,"code":"import axios from 'axios';\nexport const ADD_TODO_REQUEST = 'ADD_TODO_REQUEST';\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport const ADD_TODO_ERROR = 'ADD_TODO_ERROR';\nexport const DELETE_TODO_REQUEST = 'DELETE_TODO_REQUEST';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_ERROR = 'DELETE_TODO_ERROR';\nexport const UPDATE_TODO_REQUEST = 'UPDATE_TODO_REQUEST';\nexport const UPDATE_TODO_SUCCESS = 'UPDATE_TODO_SUCCESS';\nexport const UPDATE_TODO_ERROR = 'UPDATE_TODO_ERROR';\nexport const addTodo = datas => dispatch => {\n  const token = window.localStorage.getItem('todoToken');\n  dispatch({\n    type: ADD_TODO_REQUEST\n  });\n  return axios.post('http://localhost:3000/api/diary', datas, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch({\n      type: ADD_TODO_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_TODO_ERROR,\n      payload: err\n    });\n  });\n};\nexport const deleteTodo = id => dispatch => {\n  const token = window.localStorage.getItem('todoToken');\n  dispatch({\n    type: DELETE_TODO_REQUEST\n  });\n  return axios.delete(`http://localhost:3000/api/diary/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch({\n      type: DELETE_TODO_SUCCESS,\n      payload: res.data.message\n    });\n  }).catch(err => {\n    dispatch({\n      type: DELETE_TODO_ERROR,\n      payload: err\n    });\n  });\n};\nexport const updateTodo = (id, credentials) => dispatch => {\n  const token = window.localStorage.getItem('todoToken');\n  dispatch({\n    type: UPDATE_TODO_REQUEST\n  });\n  return axios.put(`http://localhost:3000/diary/${id}`, credentials, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    console.log(\"=========\", credentials);\n    dispatch({\n      type: UPDATE_TODO_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(\"++++++++\", credentials);\n    dispatch({\n      type: UPDATE_TODO_ERROR,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/home/mussa/Desktop/frontend/src/actions/todosActions.js"],"names":["axios","ADD_TODO_REQUEST","ADD_TODO_SUCCESS","ADD_TODO_ERROR","DELETE_TODO_REQUEST","DELETE_TODO_SUCCESS","DELETE_TODO_ERROR","UPDATE_TODO_REQUEST","UPDATE_TODO_SUCCESS","UPDATE_TODO_ERROR","addTodo","datas","dispatch","token","window","localStorage","getItem","type","post","headers","Authorization","then","res","payload","data","catch","err","deleteTodo","id","delete","message","updateTodo","credentials","put","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nexport const ADD_TODO_REQUEST='ADD_TODO_REQUEST';\r\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\r\nexport const ADD_TODO_ERROR='ADD_TODO_ERROR';\r\nexport const DELETE_TODO_REQUEST='DELETE_TODO_REQUEST';\r\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\r\nexport const DELETE_TODO_ERROR='DELETE_TODO_ERROR';\r\nexport const UPDATE_TODO_REQUEST='UPDATE_TODO_REQUEST';\r\nexport const UPDATE_TODO_SUCCESS = 'UPDATE_TODO_SUCCESS';\r\nexport const UPDATE_TODO_ERROR='UPDATE_TODO_ERROR';\r\n\r\n\r\n export const addTodo = (datas) => dispatch => {\r\n    const token = window.localStorage.getItem('todoToken')\r\n    dispatch({\r\n       type: ADD_TODO_REQUEST\r\n    })\r\n     return axios.post('http://localhost:3000/api/diary', datas, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n    })\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TODO_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: ADD_TODO_ERROR,\r\n                payload: err\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteTodo = (id) =>dispatch=> {\r\n    const token = window.localStorage.getItem('todoToken')\r\n    dispatch({\r\n        type: DELETE_TODO_REQUEST\r\n     })\r\n      return axios.delete(`http://localhost:3000/api/diary/${id}`, {\r\n         headers: {\r\n             Authorization: `Bearer ${token}`\r\n           }\r\n     })\r\n         .then(res => {\r\n             dispatch({\r\n                 type: DELETE_TODO_SUCCESS,\r\n                 payload: res.data.message\r\n             })\r\n         }).catch(err => {\r\n             dispatch({\r\n                 type: DELETE_TODO_ERROR,\r\n                 payload: err\r\n             })\r\n         })\r\n}\r\nexport const updateTodo = (id,credentials) =>dispatch=> {\r\n    const token = window.localStorage.getItem('todoToken')\r\n    dispatch({\r\n        type: UPDATE_TODO_REQUEST\r\n     })\r\n      return axios.put(`http://localhost:3000/diary/${id}`,credentials, {\r\n         headers: {\r\n             Authorization: `Bearer ${token}`\r\n           }\r\n     })\r\n          .then(res => {\r\n             console.log(\"=========\",credentials)\r\n             dispatch({\r\n                 type: UPDATE_TODO_SUCCESS,\r\n                 payload: res.data\r\n             })\r\n          }).catch(err => {\r\n            console.log(\"++++++++\",credentials)\r\n             dispatch({\r\n                 type: UPDATE_TODO_ERROR,\r\n                 payload: err\r\n             })\r\n         })\r\n}"]},"metadata":{},"sourceType":"module"}