[{"/home/mussa/Desktop/diaryFrontEnd/src/index.js":"1","/home/mussa/Desktop/diaryFrontEnd/src/App.js":"2","/home/mussa/Desktop/diaryFrontEnd/src/reportWebVitals.js":"3","/home/mussa/Desktop/diaryFrontEnd/src/reducers/rootReducer.js":"4","/home/mussa/Desktop/diaryFrontEnd/src/routes/Routers.js":"5","/home/mussa/Desktop/diaryFrontEnd/src/reducers/Signup.reducer.js":"6","/home/mussa/Desktop/diaryFrontEnd/src/reducers/todosReducer.js":"7","/home/mussa/Desktop/diaryFrontEnd/src/reducers/LoginReducer.js":"8","/home/mussa/Desktop/diaryFrontEnd/src/reducers/getTodosReducer.js":"9","/home/mussa/Desktop/diaryFrontEnd/src/routes/ProtectedRoute.js":"10","/home/mussa/Desktop/diaryFrontEnd/src/components/Login.js":"11","/home/mussa/Desktop/diaryFrontEnd/src/components/Signup.js":"12","/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js":"13","/home/mussa/Desktop/diaryFrontEnd/src/actions/Signup.action.js":"14","/home/mussa/Desktop/diaryFrontEnd/src/actions/todosActions.js":"15","/home/mussa/Desktop/diaryFrontEnd/src/actions/LoginAction.js":"16","/home/mussa/Desktop/diaryFrontEnd/src/actions/getTodosAction.js":"17","/home/mussa/Desktop/diaryFrontEnd/src/components/Card.js":"18","/home/mussa/Desktop/diaryFrontEnd/src/modals/Modal.js":"19","/home/mussa/Desktop/diaryFrontEnd/src/modals/EditTodo.js":"20","/home/mussa/Desktop/diaryFrontEnd/src/components/Test.js":"21","/home/mussa/Desktop/diaryFrontEnd/src/components/Forgetpassword.js":"22","/home/mussa/Desktop/diaryFrontEnd/src/actions/ForgetPassAction.js":"23","/home/mussa/Desktop/diaryFrontEnd/src/components/Resetpassword.js":"24","/home/mussa/Desktop/diaryFrontEnd/src/actions/ResetPasswordAction.js":"25"},{"size":768,"mtime":1622283853793,"results":"26","hashOfConfig":"27"},{"size":282,"mtime":1622726385890,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499169700000,"results":"29","hashOfConfig":"27"},{"size":486,"mtime":1619613094000,"results":"30","hashOfConfig":"27"},{"size":1182,"mtime":1623331054619,"results":"31","hashOfConfig":"27"},{"size":990,"mtime":1619693936000,"results":"32","hashOfConfig":"27"},{"size":2716,"mtime":1619625070000,"results":"33","hashOfConfig":"27"},{"size":1150,"mtime":1619795744000,"results":"34","hashOfConfig":"27"},{"size":904,"mtime":1622311757318,"results":"35","hashOfConfig":"27"},{"size":772,"mtime":1620400424000,"results":"36","hashOfConfig":"27"},{"size":1943,"mtime":1623255240442,"results":"37","hashOfConfig":"27"},{"size":1783,"mtime":1622388140157,"results":"38","hashOfConfig":"27"},{"size":3953,"mtime":1622807895977,"results":"39","hashOfConfig":"27"},{"size":764,"mtime":1622276956883,"results":"40","hashOfConfig":"27"},{"size":2559,"mtime":1622797949216,"results":"41","hashOfConfig":"27"},{"size":929,"mtime":1622310442486,"results":"42","hashOfConfig":"27"},{"size":1434,"mtime":1622801968799,"results":"43","hashOfConfig":"27"},{"size":1485,"mtime":1622450103181,"results":"44","hashOfConfig":"27"},{"size":1954,"mtime":1622379872780,"results":"45","hashOfConfig":"27"},{"size":2732,"mtime":1622387997528,"results":"46","hashOfConfig":"27"},{"size":1422,"mtime":1622790124820,"results":"47","hashOfConfig":"27"},{"size":1385,"mtime":1623403205107,"results":"48","hashOfConfig":"27"},{"size":521,"mtime":1623403220891,"results":"49","hashOfConfig":"27"},{"size":1560,"mtime":1623403164189,"results":"50","hashOfConfig":"27"},{"size":359,"mtime":1623403188319,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1nxey07",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mussa/Desktop/diaryFrontEnd/src/index.js",[],["109","110"],"/home/mussa/Desktop/diaryFrontEnd/src/App.js",["111","112"],"import './App.scss';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {Routes} from '../src/routes/Routers'\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n<Routes />\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/mussa/Desktop/diaryFrontEnd/src/reportWebVitals.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/reducers/rootReducer.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/routes/Routers.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/reducers/Signup.reducer.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/reducers/todosReducer.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/reducers/LoginReducer.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/reducers/getTodosReducer.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/routes/ProtectedRoute.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/components/Login.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/components/Signup.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/components/todoList.js",["113","114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport Modal from \"../modals/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo, deleteTodo, updateTodo } from \"../actions/todosActions\";\r\nimport {getTodos, searchTodo} from \"../actions/getTodosAction\";\r\nimport \"../App.scss\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { logout } from \"../actions/LoginAction\";\r\nlet searchKeyword;\r\n\r\n\r\nconst TodoList = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(() => {\r\n    props.getTodos();\r\n  }, [searchTerm]);\r\n\r\n  if (props.delete.success) {\r\n    cogoToast.success(\r\n      <div>\r\n        <b>Awesome!</b>\r\n        <div>todo deleted successfully?</div>\r\n      </div>\r\n    );\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    <div div className=\"todo-container\">\r\n      <div className=\"todos-header\">\r\n        <h1>Todos</h1>\r\n        <div className=\"todolist-btn\">\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"ADD TODO\"\r\n              onClick={() => setIsOpen(true)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"LOGOUT\"\r\n              onClick={() => {\r\n                localStorage.removeItem(\"todoToken\");\r\n                window.location.reload();\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"searchKeyword\"\r\n              value={searchKeyword}\r\n              type=\"text\"\r\n              placeholder=\"search ...\"\r\n              onChange={(event) => {\r\n                setSearchTerm(event.target.value);\r\n              }}\r\n            ></input>\r\n            {props.myTodos.diary\r\n              .filter((val) => {\r\n                if (searchTerm == \"\") {\r\n                  return val;\r\n                } else if (\r\n                  val.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return val;\r\n                }\r\n              })\r\n              .map((val, key) => {\r\n                return (\r\n                  <div>\r\n                    {/* <p>{val.title}</p> */}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"todos-section\">\r\n        { props.myTodos.pending ? (\r\n          <h2>diary loading...</h2>\r\n        ) : props.myTodos.error ? (\r\n          <h3>Error</h3>\r\n        ) : \r\n        props.myTodos.diary\r\n              .filter((val) => {\r\n                if (searchTerm == \"\") {\r\n                  return val;\r\n                } else if (\r\n                  val.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return val;\r\n                }\r\n              })\r\n              .map((val, key) => {\r\n                return (\r\n                  <div>\r\n                  <Card\r\n                diary={val}\r\n                updateState={props.update}\r\n                deleteTodo={props.deleteTodo}\r\n                updateTodo={props.updateTodo}\r\n              />\r\n                   \r\n                    \r\n                  </div>\r\n                );\r\n              })}\r\n      </div>\r\n      <Modal open={isOpen} onClose={() => setIsOpen(false)} todo={props} />\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addtodo: (datas) => dispatch(addTodo(datas)),\r\n    getTodos: () => dispatch(getTodos()),\r\n    deleteTodo: (id) => dispatch(deleteTodo(id)),\r\n    updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos,\r\n  myTodos: state.myTodos,\r\n  delete: state.delete,\r\n  update: state.update,\r\n  login: state.login,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","/home/mussa/Desktop/diaryFrontEnd/src/actions/Signup.action.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/actions/todosActions.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/actions/LoginAction.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/actions/getTodosAction.js",["119"],"import axios from 'axios';\r\nexport const GET_TODO_REQUEST='GET_TODO_REQUEST';\r\nexport const GET_TODO_SUCCESS = 'GET_TODO_SUCCESS';\r\nexport const GET_TODO_ERROR = 'GET_TODO_ERROR';\r\n\r\nexport const getTodos = () => dispatch => {\r\n    const token = window.localStorage.getItem('todoToken')\r\n    dispatch({\r\n        type:GET_TODO_REQUEST\r\n    })\r\n\r\n    return axios.get('http://localhost:3000/api/diary', {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n    })\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_TODO_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: GET_TODO_ERROR,\r\n                payload:err.message\r\n        })\r\n    })\r\n}\r\n\r\nexport const searchTodo =  (title) => dispatch => {\r\n    const token = window.localStorage.getItem('todoToken')\r\n    dispatch({\r\n        type:GET_TODO_REQUEST\r\n    })\r\n\r\n    return axios.get(`http://localhost:3000/api/diary/${title}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n    })\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_TODO_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: GET_TODO_ERROR,\r\n                payload:err.message\r\n        })\r\n    })\r\n}\r\n\r\nexport default {getTodos,searchTodo}","/home/mussa/Desktop/diaryFrontEnd/src/components/Card.js",["120"],"import React,{useState} from 'react';\r\nimport '../App.scss';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo } from '../actions/todosActions';\r\nimport cogoToast from 'cogo-toast';\r\nimport EditTodo from '../modals/EditTodo'\r\n\r\n\r\nconst Card = ({ diary, deleteTodo,updateTodo, updateState }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const deleteTask = (id) => {\r\n        console.log('========')\r\n        deleteTodo(id)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div key={diary._id}>\r\n            <div className=\"card-container\">\r\n                <span className=\"card-title\">{diary.title}</span>\r\n                <p>\r\n                  {diary.description}\r\n                </p>\r\n                <div className=\"card-button\">\r\n                    <div><input type=\"submit\" value=\"delete\" onClick={()=>deleteTask(diary._id)}></input></div>\r\n                    <div><input type=\"submit\" value=\"Edit\" onClick={()=>setIsOpen(true)}></input></div>\r\n            </div>\r\n            </div>\r\n            <EditTodo open={isOpen} onClose={() => setIsOpen(false)} todo={diary} update={ updateState} updateTodo={updateTodo}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        delete: state.delete,\r\n        update:state.update\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteTod:(id)=>dispatch(deleteTodo(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Card);","/home/mussa/Desktop/diaryFrontEnd/src/modals/Modal.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/modals/EditTodo.js",["121","122","123"],"import React, { useEffect, useState } from 'react';\r\nimport '../App.scss';\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux'\r\nimport {updateTodo} from '../actions/todosActions'\r\n\r\nconst MODAL_STYLES = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  backgroundColor: '#FFF',\r\n  padding: '50px',\r\n  zIndex: 1000\r\n}\r\nconst OVERLAY_STYLES = {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: 'rgba(0,0,0,.9)',\r\n  padding: '50px',\r\n  zIndex: 1000\r\n}\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst EditTodo = ({ open, onClose, todo,updateTodo, update }) => {\r\n    let [state, setState] = useState({})\r\n    // const [title, setTitle] = useState('')\r\n    // const [description, setDescription] = useState('')\r\n    const handleChange = (e) => {\r\n        setState({\r\n          ...state,\r\n          [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const id = todo._id\r\n    updateTodo(id,state)\r\n   \r\n  }\r\n  \r\n  if (update.success) {\r\n\r\n    cogoToast.success(\r\n      <div>\r\n        <b>Awesome!</b>\r\n        <div>{update.message}</div>\r\n      </div>\r\n    )\r\n    setTimeout(() => {\r\n      window.location.reload()\r\n    }, 1500)\r\n  }\r\n  if (update.error) {\r\n    cogoToast.error(\r\n      <div>\r\n        <b></b>\r\n        <div>{update.message}</div>\r\n      </div>\r\n    )\r\n  }\r\n    useEffect(() => {\r\n      setState({\r\n        title: todo.title,\r\n        description:todo.description\r\n        })\r\n  },[])\r\n\r\n  if (!open) return null;\r\n  return (\r\n    <>\r\n      <div style={OVERLAY_STYLES}></div>\r\n      <div style={MODAL_STYLES} className=\"modal\">\r\n        <CloseModalButton\r\n          aria-label='Close modal'\r\n          onClick={onClose}\r\n        />\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" placeholder=\"title\" defaultValue={state.title} id=\"title\" onChange={handleChange}></input><br />\r\n\r\n          <textarea placeholder=\"description\"  defaultValue={state.description} id=\"description\" onChange={handleChange}></textarea>\r\n          <input type=\"submit\" value=\"create\"></input>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//       update:state.delete\r\n//   }\r\n// }\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//       update:({id,credentials})=>dispatch(updateTodo({id,credentials}))\r\n//   }\r\n// }\r\n\r\nexport default EditTodo;","/home/mussa/Desktop/diaryFrontEnd/src/components/Test.js",["124","125","126"],"import React, { Component } from \"react\";\nimport { getTodos } from \"../actions/getTodosAction\";\nimport Axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n  }\n\n  async componentDidMount() {\n    $(document).ready(function () {\n        $('#my-table').DataTable();\n    });\n    const token = window.localStorage.getItem(\"todoToken\");\n    const { data } = this.state;\n    const returnedData = await Axios.get(\"http://localhost:3000/api/diary\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log(token);\n\n    this.setState({\n      data: returnedData.data.diary\n    });\n  }\n  render() {\n    {\n      const data = this.state.data;\n    }\n    return (\n      <div>\n        <Table striped bordered hover id=\"my-table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((d) => (\n              <tr key={d._id}>\n                <td>{d.title}</td>\n                <td>{d.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n","/home/mussa/Desktop/diaryFrontEnd/src/components/Forgetpassword.js",["127","128","129","130"],"/home/mussa/Desktop/diaryFrontEnd/src/actions/ForgetPassAction.js",[],"/home/mussa/Desktop/diaryFrontEnd/src/components/Resetpassword.js",["131","132","133"],"/home/mussa/Desktop/diaryFrontEnd/src/actions/ResetPasswordAction.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":25,"nodeType":"140","messageId":"141","endLine":2,"endColumn":30},{"ruleId":"138","severity":1,"message":"142","line":2,"column":32,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"143","line":6,"column":19,"nodeType":"140","messageId":"141","endLine":6,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":18,"column":6,"nodeType":"146","endLine":18,"endColumn":18,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":62,"column":29,"nodeType":"150","messageId":"151","endLine":62,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":63,"column":32,"nodeType":"154","messageId":"155","endLine":63,"endColumn":34},{"ruleId":"148","severity":1,"message":"149","line":88,"column":29,"nodeType":"150","messageId":"151","endLine":88,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":89,"column":32,"nodeType":"154","messageId":"155","endLine":89,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":54,"column":1,"nodeType":"158","endLine":54,"endColumn":37},{"ruleId":"138","severity":1,"message":"159","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"160","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":17},{"ruleId":"138","severity":1,"message":"161","line":7,"column":9,"nodeType":"140","messageId":"141","endLine":7,"endColumn":19},{"ruleId":"144","severity":1,"message":"162","line":81,"column":5,"nodeType":"146","endLine":81,"endColumn":7,"suggestions":"163"},{"ruleId":"138","severity":1,"message":"164","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"165","line":22,"column":13,"nodeType":"140","messageId":"141","endLine":22,"endColumn":17},{"ruleId":"138","severity":1,"message":"165","line":36,"column":13,"nodeType":"140","messageId":"141","endLine":36,"endColumn":17},{"ruleId":"138","severity":1,"message":"166","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"159","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":17},{"ruleId":"138","severity":1,"message":"167","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"138","severity":1,"message":"168","line":12,"column":11,"nodeType":"140","messageId":"141","endLine":12,"endColumn":16},{"ruleId":"138","severity":1,"message":"166","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"159","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":17},{"ruleId":"138","severity":1,"message":"169","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":13},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'searchTodo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["172"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'cogoToast' is defined but never used.","'connect' is defined but never used.","'updateTodo' is defined but never used.","React Hook useEffect has missing dependencies: 'todo.description' and 'todo.title'. Either include them or remove the dependency array. If 'setState' needs the current value of 'todo.title', you can also switch to useReducer instead of useState and read 'todo.title' in the reducer.",["173"],"'getTodos' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'data' is defined but never used.","'token' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [props, searchTerm]",{"range":"178","text":"179"},"Update the dependencies array to be: [todo.description, todo.title]",{"range":"180","text":"181"},[615,627],"[props, searchTerm]",[1791,1793],"[todo.description, todo.title]"]