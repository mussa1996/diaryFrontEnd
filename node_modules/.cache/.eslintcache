[{"/home/mussa/Desktop/diaryUI/frontend/src/index.js":"1","/home/mussa/Desktop/diaryUI/frontend/src/reportWebVitals.js":"2","/home/mussa/Desktop/diaryUI/frontend/src/reducers/rootReducer.js":"3","/home/mussa/Desktop/diaryUI/frontend/src/App.js":"4","/home/mussa/Desktop/diaryUI/frontend/src/reducers/Signup.reducer.js":"5","/home/mussa/Desktop/diaryUI/frontend/src/reducers/todosReducer.js":"6","/home/mussa/Desktop/diaryUI/frontend/src/reducers/getTodosReducer.js":"7","/home/mussa/Desktop/diaryUI/frontend/src/reducers/LoginReducer.js":"8","/home/mussa/Desktop/diaryUI/frontend/src/routes/Routers.js":"9","/home/mussa/Desktop/diaryUI/frontend/src/actions/Signup.action.js":"10","/home/mussa/Desktop/diaryUI/frontend/src/actions/todosActions.js":"11","/home/mussa/Desktop/diaryUI/frontend/src/actions/getTodosAction.js":"12","/home/mussa/Desktop/diaryUI/frontend/src/actions/LoginAction.js":"13","/home/mussa/Desktop/diaryUI/frontend/src/routes/ProtectedRoute.js":"14","/home/mussa/Desktop/diaryUI/frontend/src/components/Login.js":"15","/home/mussa/Desktop/diaryUI/frontend/src/components/Signup.js":"16","/home/mussa/Desktop/diaryUI/frontend/src/components/todoList.js":"17","/home/mussa/Desktop/diaryUI/frontend/src/components/Card.js":"18","/home/mussa/Desktop/diaryUI/frontend/src/modals/Modal.js":"19","/home/mussa/Desktop/diaryUI/frontend/src/modals/EditTodo.js":"20"},{"size":768,"mtime":1622283853793,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499169700000,"results":"23","hashOfConfig":"22"},{"size":486,"mtime":1619613094000,"results":"24","hashOfConfig":"22"},{"size":282,"mtime":1622283428599,"results":"25","hashOfConfig":"22"},{"size":990,"mtime":1619693936000,"results":"26","hashOfConfig":"22"},{"size":2716,"mtime":1619625070000,"results":"27","hashOfConfig":"22"},{"size":904,"mtime":1622311757318,"results":"28","hashOfConfig":"22"},{"size":1150,"mtime":1619795744000,"results":"29","hashOfConfig":"22"},{"size":569,"mtime":1622126076000,"results":"30","hashOfConfig":"22"},{"size":764,"mtime":1622276956883,"results":"31","hashOfConfig":"22"},{"size":2552,"mtime":1622383972079,"results":"32","hashOfConfig":"22"},{"size":798,"mtime":1622276821592,"results":"33","hashOfConfig":"22"},{"size":929,"mtime":1622310442486,"results":"34","hashOfConfig":"22"},{"size":772,"mtime":1620400424000,"results":"35","hashOfConfig":"22"},{"size":1868,"mtime":1619795816000,"results":"36","hashOfConfig":"22"},{"size":1783,"mtime":1622388140157,"results":"37","hashOfConfig":"22"},{"size":2935,"mtime":1622387626115,"results":"38","hashOfConfig":"22"},{"size":1485,"mtime":1622387637219,"results":"39","hashOfConfig":"22"},{"size":1954,"mtime":1622379872780,"results":"40","hashOfConfig":"22"},{"size":2732,"mtime":1622387997528,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1r0w42i",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"/home/mussa/Desktop/diaryUI/frontend/src/index.js",[],["87","88"],"/home/mussa/Desktop/diaryUI/frontend/src/reportWebVitals.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/reducers/rootReducer.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/App.js",["89","90"],"import './App.scss';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {Routes} from '../src/routes/Routers'\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n<Routes />\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/mussa/Desktop/diaryUI/frontend/src/reducers/Signup.reducer.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/reducers/todosReducer.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/reducers/getTodosReducer.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/reducers/LoginReducer.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/routes/Routers.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/actions/Signup.action.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/actions/todosActions.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/actions/getTodosAction.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/actions/LoginAction.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/routes/ProtectedRoute.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/components/Login.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/components/Signup.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/components/todoList.js",["91"],"import React,{useState,useEffect} from 'react';\r\nimport Card from './Card';\r\nimport Modal from '../modals/Modal';\r\nimport { connect } from 'react-redux'\r\nimport {addTodo, deleteTodo,updateTodo} from '../actions/todosActions'\r\nimport getTodos from '../actions/getTodosAction'\r\nimport '../App.scss'\r\nimport cogoToast from 'cogo-toast';\r\nimport { logout } from '../actions/LoginAction';\r\n    \r\nconst TodoList = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    useEffect(() => {\r\n            props.getTodos()\r\n    }, [])\r\n    \r\n    if (props.delete.success) {\r\n        cogoToast.success(\r\n            <div>\r\n              <b>Awesome!</b>\r\n              <div>todo deleted successfully?</div>\r\n            </div>\r\n        )\r\n        window.location.reload();\r\n    }\r\n        return (\r\n            <div div className=\"todo-container\">\r\n                <div className=\"todos-header\">\r\n                    <h1>Todos</h1>\r\n                    <div className=\"todolist-btn\">\r\n                        <div>\r\n                        <input type=\"submit\" value=\"ADD TODO\" onClick={()=>setIsOpen(true)}></input>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"submit\" value=\"LOGOUT\" onClick={() => {\r\n                                localStorage.removeItem('todoToken');\r\n                                window.location.reload()\r\n                            }}></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"todos-section\">\r\n                    {props.myTodos.pending ? (\r\n                        <h2>diary loading...</h2>) : (props.myTodos.error ? (<h3>Error</h3>) : (\r\n                         props.myTodos.diary[0]!=null?(\r\n                            props.myTodos.diary.map(todo => {\r\n                                return (\r\n                                    <Card diary={todo} updateState={props.update} deleteTodo={props.deleteTodo} updateTodo={ props.updateTodo}/>\r\n                                )\r\n                            })\r\n                         ):(<h3>create your first todo</h3>)\r\n                        ))}\r\n                </div>\r\n                <Modal open={isOpen} onClose={() => setIsOpen(false)} todo={ props}/>\r\n            </div>\r\n        );\r\n    \r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addtodo: (datas) => dispatch(addTodo(datas)),\r\n        getTodos: ()=>dispatch(getTodos()),\r\n        deleteTodo: (id) => dispatch(deleteTodo(id)),\r\n        updateTodo: (id, credentials) => dispatch(updateTodo(id, credentials)),\r\n        logout:()=>dispatch(logout())\r\n    }\r\n  }\r\n  const mapStateToProps = (state) =>( {\r\n      todos: state.todos,\r\n      myTodos: state.myTodos,\r\n      delete: state.delete,\r\n      update: state.update,\r\n      login:state.login\r\n  })\r\n  export default connect(mapStateToProps,mapDispatchToProps) (TodoList);","/home/mussa/Desktop/diaryUI/frontend/src/components/Card.js",["92"],"import React,{useState} from 'react';\r\nimport '../App.scss';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo } from '../actions/todosActions';\r\nimport cogoToast from 'cogo-toast';\r\nimport EditTodo from '../modals/EditTodo'\r\n\r\n\r\nconst Card = ({ diary, deleteTodo,updateTodo, updateState }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const deleteTask = (id) => {\r\n        console.log('========')\r\n        deleteTodo(id)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div key={diary._id}>\r\n            <div className=\"card-container\">\r\n                <span className=\"card-title\">{diary.title}</span>\r\n                <p>\r\n                  {diary.description}\r\n                </p>\r\n                <div className=\"card-button\">\r\n                    <div><input type=\"submit\" value=\"delete\" onClick={()=>deleteTask(diary._id)}></input></div>\r\n                    <div><input type=\"submit\" value=\"Edit\" onClick={()=>setIsOpen(true)}></input></div>\r\n            </div>\r\n            </div>\r\n            <EditTodo open={isOpen} onClose={() => setIsOpen(false)} todo={diary} update={ updateState} updateTodo={updateTodo}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        delete: state.delete,\r\n        update:state.update\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteTod:(id)=>dispatch(deleteTodo(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Card);","/home/mussa/Desktop/diaryUI/frontend/src/modals/Modal.js",[],"/home/mussa/Desktop/diaryUI/frontend/src/modals/EditTodo.js",["93","94","95"],"import React, { useEffect, useState } from 'react';\r\nimport '../App.scss';\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport cogoToast from 'cogo-toast';\r\nimport { connect } from 'react-redux'\r\nimport {updateTodo} from '../actions/todosActions'\r\n\r\nconst MODAL_STYLES = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  backgroundColor: '#FFF',\r\n  padding: '50px',\r\n  zIndex: 1000\r\n}\r\nconst OVERLAY_STYLES = {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: 'rgba(0,0,0,.9)',\r\n  padding: '50px',\r\n  zIndex: 1000\r\n}\r\nconst CloseModalButton = styled(MdClose)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  padding: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst EditTodo = ({ open, onClose, todo,updateTodo, update }) => {\r\n    let [state, setState] = useState({})\r\n    // const [title, setTitle] = useState('')\r\n    // const [description, setDescription] = useState('')\r\n    const handleChange = (e) => {\r\n        setState({\r\n          ...state,\r\n          [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const id = todo._id\r\n    updateTodo(id,state)\r\n   \r\n  }\r\n  \r\n  if (update.success) {\r\n\r\n    cogoToast.success(\r\n      <div>\r\n        <b>Awesome!</b>\r\n        <div>{update.message}</div>\r\n      </div>\r\n    )\r\n    setTimeout(() => {\r\n      window.location.reload()\r\n    }, 1500)\r\n  }\r\n  if (update.error) {\r\n    cogoToast.error(\r\n      <div>\r\n        <b></b>\r\n        <div>{update.message}</div>\r\n      </div>\r\n    )\r\n  }\r\n    useEffect(() => {\r\n      setState({\r\n        title: todo.title,\r\n        description:todo.description\r\n        })\r\n  },[])\r\n\r\n  if (!open) return null;\r\n  return (\r\n    <>\r\n      <div style={OVERLAY_STYLES}></div>\r\n      <div style={MODAL_STYLES} className=\"modal\">\r\n        <CloseModalButton\r\n          aria-label='Close modal'\r\n          onClick={onClose}\r\n        />\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" placeholder=\"title\" defaultValue={state.title} id=\"title\" onChange={handleChange}></input><br />\r\n\r\n          <textarea placeholder=\"description\"  defaultValue={state.description} id=\"description\" onChange={handleChange}></textarea>\r\n          <input type=\"submit\" value=\"create\"></input>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//       update:state.delete\r\n//   }\r\n// }\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//       update:({id,credentials})=>dispatch(updateTodo({id,credentials}))\r\n//   }\r\n// }\r\n\r\nexport default EditTodo;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":25,"nodeType":"102","messageId":"103","endLine":2,"endColumn":30},{"ruleId":"100","severity":1,"message":"104","line":2,"column":32,"nodeType":"102","messageId":"103","endLine":2,"endColumn":38},{"ruleId":"105","severity":1,"message":"106","line":15,"column":8,"nodeType":"107","endLine":15,"endColumn":10,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"109","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"110","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},{"ruleId":"100","severity":1,"message":"111","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":19},{"ruleId":"105","severity":1,"message":"112","line":81,"column":5,"nodeType":"107","endLine":81,"endColumn":7,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["116"],"'cogoToast' is defined but never used.","'connect' is defined but never used.","'updateTodo' is defined but never used.","React Hook useEffect has missing dependencies: 'todo.description' and 'todo.title'. Either include them or remove the dependency array. If 'setState' needs the current value of 'todo.title', you can also switch to useReducer instead of useState and read 'todo.title' in the reducer.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [props]",{"range":"122","text":"123"},"Update the dependencies array to be: [todo.description, todo.title]",{"range":"124","text":"125"},[532,534],"[props]",[1791,1793],"[todo.description, todo.title]"]